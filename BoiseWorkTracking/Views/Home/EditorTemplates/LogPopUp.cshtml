@model BoiseWorkTracking.Models.ViewModels.LogViewModel

<div class="k-edit-form-container">

    @Html.HiddenFor(model => model.LogID)


    <div class="editor-label">
        <label for="departments">Department:</label>
    </div>
    <div class="editor-field">
        @(Html.Kendo().ComboBox()
            .Name("DepartmentID")
            .HtmlAttributes(new { style = "width:100%;" })
            .Placeholder("Select department...")
            .DataTextField("Name")
            .DataValueField("DepartmentID")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("Cascading_Get_Departments", "Log");
                });
            })
            .SelectedIndex(0)
            .Suggest(true)
        )
    </div>

    <div class="editor-label">
        <label for="EquipmentID">Equipment:</label>
    </div>
    <div class="editor-field">

        @(Html.Kendo().ComboBox()
                    .Name("EquipmentID")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .Placeholder("Select equipment...")
                    .DataTextField("Name")
                    .DataValueField("EquipmentID")
                    .Filter(FilterType.Contains)
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("Cascading_Get_Equipments", "Log")
                            .Data("filterEquipments");

                        }).ServerFiltering(true);
                    })
                    .AutoBind(false)
                    .SelectedIndex(0)
                    .CascadeFrom("DepartmentID")

        )
        @Html.ValidationMessageFor(model => model.EquipmentID)
    </div>


    <div class="editor-label">
        <label for="UserID">User:</label>
    </div>
    <div class="editor-field">
        @*<label for="UserID">Users:</label>*@
        @(Html.Kendo().ComboBox()
            .Name("UserID")
            .HtmlAttributes(new { style = "width:100%;" })
            .Placeholder("Select user...")
            .DataTextField("Name")
            .DataValueField("UserID")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("Cascading_Get_Users", "Log");
                });
            })
            .SelectedIndex(0)
            .Suggest(true)
        )
        @Html.ValidationMessageFor(model => model.UserID)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description)
    </div>


</div>


